apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'com.github.dcendents.android-maven'

group = "net.openid"
version = "0.1"
def vName = version
def vDate = "2016-02-25T18:15:00.000-0800"

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName vName
        project.archivesBaseName = "appauth"
    }

    sourceSets {
        main.manifest.srcFile 'AndroidManifest.xml'
        main.java.srcDirs = ['java']
        main.aidl.srcDirs = ['java']
        main.res.srcDir 'res'
        main.assets.srcDir 'assets'
        main.resources.srcDir 'java'

        test.setRoot('javatests');
        test.java.srcDir('javatests');
    }

    lintOptions {
        warningsAsErrors true
        disable 'TrulyRandom'
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    compile 'com.android.support:customtabs:23.2.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.robolectric:robolectric:2.4'
    testCompile 'com.squareup.assertj:assertj-android:1.1.1'
}

checkstyle {
    configFile file('../config/checkstyle/checkstyle.xml')
    configProperties = ['checkstyle.java.header': file('../config/checkstyle/java.header').getAbsolutePath()]
    toolVersion = "6.11.2"
}

task checkAllSource(type: Checkstyle) {
    source 'java'
    source 'javatests'
    include '**/*.java'
    classpath = files project.configurations.compile.files
}

task failOnCheckstyleWarning {
    def checkstyleWarningsFile = 'build/reports/checkstyle/checkAllSource.xml'
    doLast {
        File warningsFile = file(checkstyleWarningsFile)
        if (warningsFile.exists() && warningsFile.text.contains("<error ")) {
            throw new GradleException(
                    "There were checkstyle warnings. For more details check: " \
                     + file(checkstyleWarningsFile))
        }
    }
}

// ensure that there are no style warnings
failOnCheckstyleWarning.dependsOn checkAllSource

// run checkstyle as part of the standard set of checks
check.dependsOn failOnCheckstyleWarning

jacoco {
    toolVersion = "0.7.1.201405082137"
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true
        html.enabled = true
    }

    // Class R is used, but usage will not be covered, so ignore this class from report
    classDirectories = fileTree(
        dir: 'build/intermediates/classes/debug',
        excludes: ['**/BuildConfig.class']
    )
    sourceDirectories = files('java')
    executionData = files('build/jacoco/testDebugUnitTest.exec')
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    title = "AppAuth"
    classpath = files(project.android.getBootClasspath())
    options {
        links "http://docs.oracle.com/javase/7/docs/api/"
        linksOffline "http://d.android.com/reference","${android.sdkDirectory}/docs/reference"
    }
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
}

afterEvaluate {
    // fixes issue where javadoc can't find android symbols ref: http://stackoverflow.com/a/34572606
    androidJavadocs.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

bintray {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_KEY")
    pkg {
        repo = "net.openid"
        name = "appauth"
        desc = "AppAuth for Android"
        userOrg = "openid"
        licenses = ["Apache-2.0"]
        websiteUrl = "https://openid.github.io/AppAuth-Android/"
        issueTrackerUrl = "https://github.com/openid/AppAuth-Android/issues"
        vcsUrl = "https://github.com/openid/AppAuth-Android.git"
        githubRepo = 'bintray/gradle-bintray-plugin'

        version {
            name = vName
            desc = "AppAuth for Android"
            released = vDate
            vcsTag = vName
        }
    }
    configurations = ["archives"]
}
