// creates a keystore with a random private key suitable for building dev
// and release builds during active development.
def generateKeystore = { keystoreFile ->
    exec {
        executable "keytool"
        args [
                "-genkey",
                "-keystore", "openyolo.keystore",
                "-alias", "openyolo",
                "-keyalg", "RSA",
                "-keysize", "2048",
                "-validity", "10000",
                "-keypass", "openyolo",
                "-storepass", "openyolo",
                "-dname", "CN=openyolo"
                ]
    }
}

// checks that a keystore exists in the expected location, and generates one
// if it does not.
ext.verifyKeystore = {
    def keystoreFile = file(new File(projectDir, "openyolo.keystore"))
    if (!keystoreFile.exists()) {
        logger.lifecycle("openyolo.keystore missing - creating one")
        generateKeystore(keystoreFile)
    }
}
